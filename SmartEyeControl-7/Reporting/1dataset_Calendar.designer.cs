//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4455
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SmartEyeControl_7.Reporting {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataset_Calendar")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataset_Calendar : global::System.Data.DataSet {
        
        private table_seasonDataTable tabletable_season;
        
        private table_weekDataTable tabletable_week;
        
        private table_dayDataTable tabletable_day;
        
        private table_specialDaysDataTable tabletable_specialDays;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataset_Calendar() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataset_Calendar(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["table_season"] != null)) {
                    base.Tables.Add(new table_seasonDataTable(ds.Tables["table_season"]));
                }
                if ((ds.Tables["table_week"] != null)) {
                    base.Tables.Add(new table_weekDataTable(ds.Tables["table_week"]));
                }
                if ((ds.Tables["table_day"] != null)) {
                    base.Tables.Add(new table_dayDataTable(ds.Tables["table_day"]));
                }
                if ((ds.Tables["table_specialDays"] != null)) {
                    base.Tables.Add(new table_specialDaysDataTable(ds.Tables["table_specialDays"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table_seasonDataTable table_season {
            get {
                return this.tabletable_season;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table_weekDataTable table_week {
            get {
                return this.tabletable_week;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table_dayDataTable table_day {
            get {
                return this.tabletable_day;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public table_specialDaysDataTable table_specialDays {
            get {
                return this.tabletable_specialDays;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dataset_Calendar cln = ((dataset_Calendar)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["table_season"] != null)) {
                    base.Tables.Add(new table_seasonDataTable(ds.Tables["table_season"]));
                }
                if ((ds.Tables["table_week"] != null)) {
                    base.Tables.Add(new table_weekDataTable(ds.Tables["table_week"]));
                }
                if ((ds.Tables["table_day"] != null)) {
                    base.Tables.Add(new table_dayDataTable(ds.Tables["table_day"]));
                }
                if ((ds.Tables["table_specialDays"] != null)) {
                    base.Tables.Add(new table_specialDaysDataTable(ds.Tables["table_specialDays"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletable_season = ((table_seasonDataTable)(base.Tables["table_season"]));
            if ((initTable == true)) {
                if ((this.tabletable_season != null)) {
                    this.tabletable_season.InitVars();
                }
            }
            this.tabletable_week = ((table_weekDataTable)(base.Tables["table_week"]));
            if ((initTable == true)) {
                if ((this.tabletable_week != null)) {
                    this.tabletable_week.InitVars();
                }
            }
            this.tabletable_day = ((table_dayDataTable)(base.Tables["table_day"]));
            if ((initTable == true)) {
                if ((this.tabletable_day != null)) {
                    this.tabletable_day.InitVars();
                }
            }
            this.tabletable_specialDays = ((table_specialDaysDataTable)(base.Tables["table_specialDays"]));
            if ((initTable == true)) {
                if ((this.tabletable_specialDays != null)) {
                    this.tabletable_specialDays.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataset_Calendar";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dataset_Calendar.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletable_season = new table_seasonDataTable();
            base.Tables.Add(this.tabletable_season);
            this.tabletable_week = new table_weekDataTable();
            base.Tables.Add(this.tabletable_week);
            this.tabletable_day = new table_dayDataTable();
            base.Tables.Add(this.tabletable_day);
            this.tabletable_specialDays = new table_specialDaysDataTable();
            base.Tables.Add(this.tabletable_specialDays);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetable_season() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetable_week() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetable_day() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetable_specialDays() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataset_Calendar ds = new dataset_Calendar();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void table_seasonRowChangeEventHandler(object sender, table_seasonRowChangeEvent e);
        
        public delegate void table_weekRowChangeEventHandler(object sender, table_weekRowChangeEvent e);
        
        public delegate void table_dayRowChangeEventHandler(object sender, table_dayRowChangeEvent e);
        
        public delegate void table_specialDaysRowChangeEventHandler(object sender, table_specialDaysRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class table_seasonDataTable : global::System.Data.TypedTableBase<table_seasonRow> {
            
            private global::System.Data.DataColumn columnseason_profileID;
            
            private global::System.Data.DataColumn columnprofileName;
            
            private global::System.Data.DataColumn columnstartDate;
            
            private global::System.Data.DataColumn columnweekprofileID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_seasonDataTable() {
                this.TableName = "table_season";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_seasonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected table_seasonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn season_profileIDColumn {
                get {
                    return this.columnseason_profileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profileNameColumn {
                get {
                    return this.columnprofileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startDateColumn {
                get {
                    return this.columnstartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn weekprofileIDColumn {
                get {
                    return this.columnweekprofileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_seasonRow this[int index] {
                get {
                    return ((table_seasonRow)(this.Rows[index]));
                }
            }
            
            public event table_seasonRowChangeEventHandler table_seasonRowChanging;
            
            public event table_seasonRowChangeEventHandler table_seasonRowChanged;
            
            public event table_seasonRowChangeEventHandler table_seasonRowDeleting;
            
            public event table_seasonRowChangeEventHandler table_seasonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtable_seasonRow(table_seasonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_seasonRow Addtable_seasonRow(string season_profileID, string profileName, string startDate, string weekprofileID) {
                table_seasonRow rowtable_seasonRow = ((table_seasonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        season_profileID,
                        profileName,
                        startDate,
                        weekprofileID};
                rowtable_seasonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtable_seasonRow);
                return rowtable_seasonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                table_seasonDataTable cln = ((table_seasonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new table_seasonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnseason_profileID = base.Columns["season_profileID"];
                this.columnprofileName = base.Columns["profileName"];
                this.columnstartDate = base.Columns["startDate"];
                this.columnweekprofileID = base.Columns["weekprofileID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnseason_profileID = new global::System.Data.DataColumn("season_profileID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseason_profileID);
                this.columnprofileName = new global::System.Data.DataColumn("profileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofileName);
                this.columnstartDate = new global::System.Data.DataColumn("startDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartDate);
                this.columnweekprofileID = new global::System.Data.DataColumn("weekprofileID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweekprofileID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_seasonRow Newtable_seasonRow() {
                return ((table_seasonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new table_seasonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(table_seasonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table_seasonRowChanged != null)) {
                    this.table_seasonRowChanged(this, new table_seasonRowChangeEvent(((table_seasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table_seasonRowChanging != null)) {
                    this.table_seasonRowChanging(this, new table_seasonRowChangeEvent(((table_seasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table_seasonRowDeleted != null)) {
                    this.table_seasonRowDeleted(this, new table_seasonRowChangeEvent(((table_seasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table_seasonRowDeleting != null)) {
                    this.table_seasonRowDeleting(this, new table_seasonRowChangeEvent(((table_seasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetable_seasonRow(table_seasonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset_Calendar ds = new dataset_Calendar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "table_seasonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class table_weekDataTable : global::System.Data.TypedTableBase<table_weekRow> {
            
            private global::System.Data.DataColumn columnweek_profileID;
            
            private global::System.Data.DataColumn columnmonday;
            
            private global::System.Data.DataColumn columntuesday;
            
            private global::System.Data.DataColumn columnwednesday;
            
            private global::System.Data.DataColumn columnthursday;
            
            private global::System.Data.DataColumn columnfriday;
            
            private global::System.Data.DataColumn columnsaturday;
            
            private global::System.Data.DataColumn columnsunday;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_weekDataTable() {
                this.TableName = "table_week";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_weekDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected table_weekDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_profileIDColumn {
                get {
                    return this.columnweek_profileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mondayColumn {
                get {
                    return this.columnmonday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tuesdayColumn {
                get {
                    return this.columntuesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wednesdayColumn {
                get {
                    return this.columnwednesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thursdayColumn {
                get {
                    return this.columnthursday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fridayColumn {
                get {
                    return this.columnfriday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saturdayColumn {
                get {
                    return this.columnsaturday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sundayColumn {
                get {
                    return this.columnsunday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_weekRow this[int index] {
                get {
                    return ((table_weekRow)(this.Rows[index]));
                }
            }
            
            public event table_weekRowChangeEventHandler table_weekRowChanging;
            
            public event table_weekRowChangeEventHandler table_weekRowChanged;
            
            public event table_weekRowChangeEventHandler table_weekRowDeleting;
            
            public event table_weekRowChangeEventHandler table_weekRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtable_weekRow(table_weekRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_weekRow Addtable_weekRow(string week_profileID, string monday, string tuesday, string wednesday, string thursday, string friday, string saturday, string sunday) {
                table_weekRow rowtable_weekRow = ((table_weekRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        week_profileID,
                        monday,
                        tuesday,
                        wednesday,
                        thursday,
                        friday,
                        saturday,
                        sunday};
                rowtable_weekRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtable_weekRow);
                return rowtable_weekRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                table_weekDataTable cln = ((table_weekDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new table_weekDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnweek_profileID = base.Columns["week_profileID"];
                this.columnmonday = base.Columns["monday"];
                this.columntuesday = base.Columns["tuesday"];
                this.columnwednesday = base.Columns["wednesday"];
                this.columnthursday = base.Columns["thursday"];
                this.columnfriday = base.Columns["friday"];
                this.columnsaturday = base.Columns["saturday"];
                this.columnsunday = base.Columns["sunday"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnweek_profileID = new global::System.Data.DataColumn("week_profileID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_profileID);
                this.columnmonday = new global::System.Data.DataColumn("monday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonday);
                this.columntuesday = new global::System.Data.DataColumn("tuesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntuesday);
                this.columnwednesday = new global::System.Data.DataColumn("wednesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwednesday);
                this.columnthursday = new global::System.Data.DataColumn("thursday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthursday);
                this.columnfriday = new global::System.Data.DataColumn("friday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfriday);
                this.columnsaturday = new global::System.Data.DataColumn("saturday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaturday);
                this.columnsunday = new global::System.Data.DataColumn("sunday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsunday);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_weekRow Newtable_weekRow() {
                return ((table_weekRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new table_weekRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(table_weekRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table_weekRowChanged != null)) {
                    this.table_weekRowChanged(this, new table_weekRowChangeEvent(((table_weekRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table_weekRowChanging != null)) {
                    this.table_weekRowChanging(this, new table_weekRowChangeEvent(((table_weekRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table_weekRowDeleted != null)) {
                    this.table_weekRowDeleted(this, new table_weekRowChangeEvent(((table_weekRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table_weekRowDeleting != null)) {
                    this.table_weekRowDeleting(this, new table_weekRowChangeEvent(((table_weekRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetable_weekRow(table_weekRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset_Calendar ds = new dataset_Calendar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "table_weekDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class table_dayDataTable : global::System.Data.TypedTableBase<table_dayRow> {
            
            private global::System.Data.DataColumn columnstartTime;
            
            private global::System.Data.DataColumn columntariff;
            
            private global::System.Data.DataColumn columnprofileID;
            
            private global::System.Data.DataColumn columnslotID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_dayDataTable() {
                this.TableName = "table_day";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_dayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected table_dayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startTimeColumn {
                get {
                    return this.columnstartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tariffColumn {
                get {
                    return this.columntariff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profileIDColumn {
                get {
                    return this.columnprofileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn slotIDColumn {
                get {
                    return this.columnslotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_dayRow this[int index] {
                get {
                    return ((table_dayRow)(this.Rows[index]));
                }
            }
            
            public event table_dayRowChangeEventHandler table_dayRowChanging;
            
            public event table_dayRowChangeEventHandler table_dayRowChanged;
            
            public event table_dayRowChangeEventHandler table_dayRowDeleting;
            
            public event table_dayRowChangeEventHandler table_dayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtable_dayRow(table_dayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_dayRow Addtable_dayRow(string startTime, string tariff, short profileID, string slotID) {
                table_dayRow rowtable_dayRow = ((table_dayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        startTime,
                        tariff,
                        profileID,
                        slotID};
                rowtable_dayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtable_dayRow);
                return rowtable_dayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                table_dayDataTable cln = ((table_dayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new table_dayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstartTime = base.Columns["startTime"];
                this.columntariff = base.Columns["tariff"];
                this.columnprofileID = base.Columns["profileID"];
                this.columnslotID = base.Columns["slotID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstartTime = new global::System.Data.DataColumn("startTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartTime);
                this.columntariff = new global::System.Data.DataColumn("tariff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntariff);
                this.columnprofileID = new global::System.Data.DataColumn("profileID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofileID);
                this.columnslotID = new global::System.Data.DataColumn("slotID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnslotID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_dayRow Newtable_dayRow() {
                return ((table_dayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new table_dayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(table_dayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table_dayRowChanged != null)) {
                    this.table_dayRowChanged(this, new table_dayRowChangeEvent(((table_dayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table_dayRowChanging != null)) {
                    this.table_dayRowChanging(this, new table_dayRowChangeEvent(((table_dayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table_dayRowDeleted != null)) {
                    this.table_dayRowDeleted(this, new table_dayRowChangeEvent(((table_dayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table_dayRowDeleting != null)) {
                    this.table_dayRowDeleting(this, new table_dayRowChangeEvent(((table_dayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetable_dayRow(table_dayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset_Calendar ds = new dataset_Calendar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "table_dayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class table_specialDaysDataTable : global::System.Data.TypedTableBase<table_specialDaysRow> {
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columndayprofileId;
            
            private global::System.Data.DataColumn columnsday_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_specialDaysDataTable() {
                this.TableName = "table_specialDays";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_specialDaysDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected table_specialDaysDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dayprofileIdColumn {
                get {
                    return this.columndayprofileId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sday_idColumn {
                get {
                    return this.columnsday_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_specialDaysRow this[int index] {
                get {
                    return ((table_specialDaysRow)(this.Rows[index]));
                }
            }
            
            public event table_specialDaysRowChangeEventHandler table_specialDaysRowChanging;
            
            public event table_specialDaysRowChangeEventHandler table_specialDaysRowChanged;
            
            public event table_specialDaysRowChangeEventHandler table_specialDaysRowDeleting;
            
            public event table_specialDaysRowChangeEventHandler table_specialDaysRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtable_specialDaysRow(table_specialDaysRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_specialDaysRow Addtable_specialDaysRow(string date, string dayprofileId, string sday_id) {
                table_specialDaysRow rowtable_specialDaysRow = ((table_specialDaysRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        date,
                        dayprofileId,
                        sday_id};
                rowtable_specialDaysRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtable_specialDaysRow);
                return rowtable_specialDaysRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                table_specialDaysDataTable cln = ((table_specialDaysDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new table_specialDaysDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndate = base.Columns["date"];
                this.columndayprofileId = base.Columns["dayprofileId"];
                this.columnsday_id = base.Columns["sday_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndate = new global::System.Data.DataColumn("date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columndayprofileId = new global::System.Data.DataColumn("dayprofileId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndayprofileId);
                this.columnsday_id = new global::System.Data.DataColumn("sday_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsday_id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_specialDaysRow Newtable_specialDaysRow() {
                return ((table_specialDaysRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new table_specialDaysRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(table_specialDaysRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.table_specialDaysRowChanged != null)) {
                    this.table_specialDaysRowChanged(this, new table_specialDaysRowChangeEvent(((table_specialDaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.table_specialDaysRowChanging != null)) {
                    this.table_specialDaysRowChanging(this, new table_specialDaysRowChangeEvent(((table_specialDaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.table_specialDaysRowDeleted != null)) {
                    this.table_specialDaysRowDeleted(this, new table_specialDaysRowChangeEvent(((table_specialDaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.table_specialDaysRowDeleting != null)) {
                    this.table_specialDaysRowDeleting(this, new table_specialDaysRowChangeEvent(((table_specialDaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetable_specialDaysRow(table_specialDaysRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset_Calendar ds = new dataset_Calendar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "table_specialDaysDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class table_seasonRow : global::System.Data.DataRow {
            
            private table_seasonDataTable tabletable_season;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_seasonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable_season = ((table_seasonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string season_profileID {
                get {
                    try {
                        return ((string)(this[this.tabletable_season.season_profileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'season_profileID\' in table \'table_season\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_season.season_profileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string profileName {
                get {
                    try {
                        return ((string)(this[this.tabletable_season.profileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profileName\' in table \'table_season\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_season.profileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string startDate {
                get {
                    try {
                        return ((string)(this[this.tabletable_season.startDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startDate\' in table \'table_season\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_season.startDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string weekprofileID {
                get {
                    try {
                        return ((string)(this[this.tabletable_season.weekprofileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'weekprofileID\' in table \'table_season\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_season.weekprofileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isseason_profileIDNull() {
                return this.IsNull(this.tabletable_season.season_profileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setseason_profileIDNull() {
                this[this.tabletable_season.season_profileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprofileNameNull() {
                return this.IsNull(this.tabletable_season.profileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprofileNameNull() {
                this[this.tabletable_season.profileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartDateNull() {
                return this.IsNull(this.tabletable_season.startDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartDateNull() {
                this[this.tabletable_season.startDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweekprofileIDNull() {
                return this.IsNull(this.tabletable_season.weekprofileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweekprofileIDNull() {
                this[this.tabletable_season.weekprofileIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class table_weekRow : global::System.Data.DataRow {
            
            private table_weekDataTable tabletable_week;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_weekRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable_week = ((table_weekDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string week_profileID {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.week_profileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'week_profileID\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.week_profileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string monday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.mondayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.mondayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tuesday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.tuesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tuesday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.tuesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wednesday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.wednesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wednesday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.wednesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string thursday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.thursdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thursday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.thursdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string friday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.fridayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'friday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.fridayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saturday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.saturdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saturday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.saturdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sunday {
                get {
                    try {
                        return ((string)(this[this.tabletable_week.sundayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sunday\' in table \'table_week\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_week.sundayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isweek_profileIDNull() {
                return this.IsNull(this.tabletable_week.week_profileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setweek_profileIDNull() {
                this[this.tabletable_week.week_profileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmondayNull() {
                return this.IsNull(this.tabletable_week.mondayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmondayNull() {
                this[this.tabletable_week.mondayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstuesdayNull() {
                return this.IsNull(this.tabletable_week.tuesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettuesdayNull() {
                this[this.tabletable_week.tuesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswednesdayNull() {
                return this.IsNull(this.tabletable_week.wednesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwednesdayNull() {
                this[this.tabletable_week.wednesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsthursdayNull() {
                return this.IsNull(this.tabletable_week.thursdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetthursdayNull() {
                this[this.tabletable_week.thursdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfridayNull() {
                return this.IsNull(this.tabletable_week.fridayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfridayNull() {
                this[this.tabletable_week.fridayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaturdayNull() {
                return this.IsNull(this.tabletable_week.saturdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaturdayNull() {
                this[this.tabletable_week.saturdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssundayNull() {
                return this.IsNull(this.tabletable_week.sundayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsundayNull() {
                this[this.tabletable_week.sundayColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class table_dayRow : global::System.Data.DataRow {
            
            private table_dayDataTable tabletable_day;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_dayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable_day = ((table_dayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string startTime {
                get {
                    try {
                        return ((string)(this[this.tabletable_day.startTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startTime\' in table \'table_day\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_day.startTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tariff {
                get {
                    try {
                        return ((string)(this[this.tabletable_day.tariffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tariff\' in table \'table_day\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_day.tariffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short profileID {
                get {
                    try {
                        return ((short)(this[this.tabletable_day.profileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'profileID\' in table \'table_day\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_day.profileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string slotID {
                get {
                    try {
                        return ((string)(this[this.tabletable_day.slotIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'slotID\' in table \'table_day\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_day.slotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartTimeNull() {
                return this.IsNull(this.tabletable_day.startTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartTimeNull() {
                this[this.tabletable_day.startTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstariffNull() {
                return this.IsNull(this.tabletable_day.tariffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettariffNull() {
                this[this.tabletable_day.tariffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprofileIDNull() {
                return this.IsNull(this.tabletable_day.profileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprofileIDNull() {
                this[this.tabletable_day.profileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslotIDNull() {
                return this.IsNull(this.tabletable_day.slotIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslotIDNull() {
                this[this.tabletable_day.slotIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class table_specialDaysRow : global::System.Data.DataRow {
            
            private table_specialDaysDataTable tabletable_specialDays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal table_specialDaysRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletable_specialDays = ((table_specialDaysDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string date {
                get {
                    try {
                        return ((string)(this[this.tabletable_specialDays.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'table_specialDays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_specialDays.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dayprofileId {
                get {
                    try {
                        return ((string)(this[this.tabletable_specialDays.dayprofileIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dayprofileId\' in table \'table_specialDays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_specialDays.dayprofileIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sday_id {
                get {
                    try {
                        return ((string)(this[this.tabletable_specialDays.sday_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sday_id\' in table \'table_specialDays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletable_specialDays.sday_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tabletable_specialDays.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tabletable_specialDays.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdayprofileIdNull() {
                return this.IsNull(this.tabletable_specialDays.dayprofileIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdayprofileIdNull() {
                this[this.tabletable_specialDays.dayprofileIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issday_idNull() {
                return this.IsNull(this.tabletable_specialDays.sday_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsday_idNull() {
                this[this.tabletable_specialDays.sday_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class table_seasonRowChangeEvent : global::System.EventArgs {
            
            private table_seasonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_seasonRowChangeEvent(table_seasonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_seasonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class table_weekRowChangeEvent : global::System.EventArgs {
            
            private table_weekRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_weekRowChangeEvent(table_weekRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_weekRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class table_dayRowChangeEvent : global::System.EventArgs {
            
            private table_dayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_dayRowChangeEvent(table_dayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_dayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class table_specialDaysRowChangeEvent : global::System.EventArgs {
            
            private table_specialDaysRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_specialDaysRowChangeEvent(table_specialDaysRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public table_specialDaysRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591